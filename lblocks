local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (3==v29) then function v36()local v43=v35();local v44=v35();local v45=1;local v46=(v32(v44,932 -(857 + 74) ,588 -(367 + 201) ) * (2^(959 -(214 + 713)))) + v43 ;local v47=v32(v44,6 + 15 ,31);local v48=((v32(v44,32)==1) and  -1) or 1 ;if (v47==0) then if (v46==0) then return v48 * 0 ;else local v90=0;while true do if (0==v90) then v47=1 + 0 ;v45=0;break;end end end elseif (v47==2047) then return ((v46==0) and (v48 * (1/0))) or (v48 * NaN) ;end return v16(v48,v47-1023 ) * (v45 + (v46/(2^52))) ;end v37=nil;function v37(v49)local v50;if  not v49 then local v79=0;while true do if (v79==0) then v49=v35();if (v49==0) then return "";end break;end end end v50=v11(v27,v30,(v30 + v49) -1 );v30=v30 + v49 ;local v51={};for v77=1, #v50 do v51[v77]=v10(v9(v11(v50,v77,v77)));end return v14(v51);end v38=v35;v29=4;end if (v29==1) then function v32(v52,v53,v54)if v54 then local v80=0;local v81;while true do if (v80==0) then v81=(v52/(2^(v53-1)))%(2^(((v54-1) -(v53-1)) + 1)) ;return v81-(v81%1) ;end end else local v82=2^(v53-1) ;return (((v52%(v82 + v82))>=v82) and 1) or 0 ;end end v33=nil;function v33()local v55=v9(v27,v30,v30);v30=v30 + (1 -0) ;return v55;end v34=nil;v29=2;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\80\93","\67\126\115\100\167\164\62\87"),function(v56)if (v9(v56,5 -3 )==(226 -147)) then local v83=0;while true do if (v83==0) then v31=v8(v11(v56,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v10(v8(v56,16));if v31 then local v117=v13(v85,v31);v31=nil;return v117;else return v85;end break;end end end end);v32=nil;v29=1;end if (5==v29) then v41=nil;function v41(v57,v58,v59)local v60=0;local v61;local v62;local v63;while true do if (1==v60) then v63=v57[3];return function(...)local v91=v61;local v92=v62;local v93=v63;local v94=v39;local v95=1;local v96= -1;local v97={};local v98={...};local v99=v20("#",...) -(4 -3) ;local v100={};local v101={};for v114=0,v99 do if (v114>=v93) then v97[v114-v93 ]=v98[v114 + 1 ];else v101[v114]=v98[v114 + 1 ];end end local v102=(v99-v93) + 1 ;local v103;local v104;while true do v103=v91[v95];v104=v103[1];if (v104<=45) then if (v104<=22) then if (v104<=10) then if (v104<=4) then if (v104<=1) then if (v104==0) then v101[v103[2]][v101[v103[3]]]=v103[4];elseif (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=2) then if  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>3) then local v203=0;local v204;local v205;local v206;while true do if (v203==2) then if (v205>0) then if (v206<=v101[v204 + 1 ]) then local v429=0;while true do if (v429==0) then v95=v103[3];v101[v204 + 3 ]=v206;break;end end end elseif (v206>=v101[v204 + 1 ]) then v95=v103[3];v101[v204 + (120 -(32 + 85)) ]=v206;end break;end if (v203==0) then v204=v103[2];v205=v101[v204 + 2 ];v203=1;end if (v203==1) then v206=v101[v204] + v205 ;v101[v204]=v206;v203=2;end end else local v207=v103[2];local v208,v209=v94(v101[v207](v101[v207 + 1 ]));v96=(v209 + v207) -(1 + 0) ;local v210=0;for v306=v207,v96 do v210=v210 + 1 ;v101[v306]=v208[v210];end end elseif (v104<=7) then if (v104<=(2 + 3)) then local v138=0;local v139;while true do if (v138==0) then v139=v103[2];do return v21(v101,v139,v96);end break;end end elseif (v104==6) then local v211=0;local v212;while true do if (0==v211) then v212=v103[2];v101[v212]=v101[v212](v101[v212 + (958 -(892 + 65)) ]);break;end end else v101[v103[2]]= #v101[v103[7 -4 ]];end elseif (v104<=(14 -6)) then local v140=0;local v141;local v142;local v143;while true do if (v140==2) then if (v142>0) then if (v143<=v101[v141 + 1 ]) then v95=v103[3];v101[v141 + 3 ]=v143;end elseif (v143>=v101[v141 + 1 ]) then local v413=0;while true do if (v413==0) then v95=v103[3];v101[v141 + 3 ]=v143;break;end end end break;end if (v140==1) then v143=v101[v141] + v142 ;v101[v141]=v143;v140=2;end if (v140==0) then v141=v103[2];v142=v101[v141 + 2 ];v140=1;end end elseif (v104==9) then v58[v103[3]]=v101[v103[2]];else local v216=0;local v217;local v218;local v219;local v220;while true do if (v216==1) then v96=(v219 + v217) -1 ;v220=0;v216=2;end if (v216==0) then v217=v103[2];v218,v219=v94(v101[v217](v21(v101,v217 + 1 ,v96)));v216=1;end if (v216==2) then for v387=v217,v96 do local v388=0;while true do if (v388==0) then v220=v220 + 1 ;v101[v387]=v218[v220];break;end end end break;end end end elseif (v104<=16) then if (v104<=13) then if (v104<=11) then v101[v103[2]][v103[4 -1 ]]=v101[v103[4]];elseif (v104==12) then local v221=v103[2];v101[v221](v101[v221 + 1 ]);else v101[v103[2]][v101[v103[3]]]=v103[4];end elseif (v104<=14) then v101[v103[2]]=v101[v103[3]]%v101[v103[4]] ;elseif (v104==15) then v101[v103[2]]=v103[3] + v101[v103[4]] ;else local v225=v103[2];v101[v225](v21(v101,v225 + 1 ,v103[3]));end elseif (v104<=19) then if (v104<=17) then v101[v103[2]]=v101[v103[3]] + v103[4] ;elseif (v104==(368 -(87 + 263))) then local v226=0;local v227;local v228;local v229;while true do if (v226==1) then v229=v101[v227 + (182 -(67 + 113)) ];if (v229>(0 + 0)) then if (v228>v101[v227 + 1 ]) then v95=v103[3];else v101[v227 + 3 ]=v228;end elseif (v228<v101[v227 + (2 -1) ]) then v95=v103[3];else v101[v227 + 3 ]=v228;end break;end if (v226==0) then v227=v103[2];v228=v101[v227];v226=1;end end elseif (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=20) then v101[v103[2]]=v101[v103[3 + 0 ]] + v103[4] ;elseif (v104>21) then v101[v103[2]][v103[3]]=v103[4];else v59[v103[3]]=v101[v103[2]];end elseif (v104<=33) then if (v104<=27) then if (v104<=24) then if (v104==23) then local v149=0;local v150;local v151;while true do if (v149==1) then for v330=1, #v100 do local v331=0;local v332;while true do if (v331==0) then v332=v100[v330];for v421=0, #v332 do local v422=0;local v423;local v424;local v425;while true do if (v422==1) then v425=v423[2];if ((v424==v101) and (v425>=v150)) then local v459=0;while true do if (v459==0) then v151[v425]=v424[v425];v423[3 -2 ]=v151;break;end end end break;end if (v422==0) then v423=v332[v421];v424=v423[1];v422=1;end end end break;end end end break;end if (v149==0) then v150=v103[2];v151={};v149=1;end end else v101[v103[2]]=v41(v92[v103[3]],nil,v59);end elseif (v104<=25) then v58[v103[3]]=v101[v103[2]];elseif (v104>26) then v101[v103[2]]=v101[v103[3]]%v103[4] ;else v101[v103[2]]=v58[v103[3]];end elseif (v104<=30) then if (v104<=28) then if (v101[v103[954 -(802 + 150) ]]==v103[4]) then v95=v95 + (2 -1) ;else v95=v103[3];end elseif (v104==29) then v101[v103[2]]=v101[v103[3]];else v101[v103[2]]=v103[5 -2 ]~=0 ;end elseif (v104<=31) then v101[v103[2]]=v101[v103[3]]%v101[v103[4]] ;elseif (v104==32) then v101[v103[2 + 0 ]]={};else local v242=v103[999 -(915 + 82) ];local v243=v101[v242];local v244=v101[v242 + 2 ];if (v244>(0 -0)) then if (v243>v101[v242 + 1 ]) then v95=v103[3];else v101[v242 + 3 ]=v243;end elseif (v243<v101[v242 + 1 ]) then v95=v103[3];else v101[v242 + 3 ]=v243;end end elseif (v104<=39) then if (v104<=36) then if (v104<=34) then local v156=0;local v157;while true do if (0==v156) then v157=v103[2];v101[v157]=v101[v157](v21(v101,v157 + 1 ,v103[3]));break;end end elseif (v104==35) then v101[v103[2]]=v59[v103[3]];else local v247=0;local v248;local v249;local v250;while true do if (v247==0) then v248=v92[v103[3]];v249=nil;v247=1;end if (v247==2) then for v393=1,v103[4] do local v394=0;local v395;while true do if (v394==0) then v95=v95 + 1 ;v395=v91[v95];v394=1;end if (v394==1) then if (v395[1]==29) then v250[v393-1 ]={v101,v395[3]};else v250[v393-1 ]={v58,v395[3]};end v100[ #v100 + 1 ]=v250;break;end end end v101[v103[2]]=v41(v248,v249,v59);break;end if (v247==1) then v250={};v249=v18({},{[v7("\22\191\95\209\45\133\78","\191\73\224\54")]=function(v396,v397)local v398=0;local v399;while true do if (v398==0) then v399=v250[v397];return v399[1][v399[2 + 0 ]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v400,v401,v402)local v403=0;local v404;while true do if (v403==0) then v404=v250[v401];v404[1][v404[2]]=v402;break;end end end});v247=2;end end end elseif (v104<=37) then v101[v103[2]][v103[3]]=v101[v103[4]];elseif (v104>(82 -44)) then v101[v103[2]]();else for v316=v103[2],v103[3] do v101[v316]=nil;end end elseif (v104<=42) then if (v104<=40) then local v160=0;local v161;while true do if (v160==0) then v161=v103[2];v101[v161]=v101[v161]();break;end end elseif (v104==41) then local v251=v103[2];v101[v251]=v101[v251](v21(v101,v251 + 1 ,v96));else v101[v103[2]]=v59[v103[3]];end elseif (v104<=43) then v101[v103[2]]=v101[v103[1 + 2 ]]%v103[6 -2 ] ;elseif (v104==44) then v101[v103[2 + 0 ]]=v101[v103[3]][v103[795 -(368 + 423) ]];else local v257=v103[2];v101[v257]=v101[v257](v21(v101,v257 + 1 ,v103[3]));end elseif (v104<=68) then if (v104<=(175 -119)) then if (v104<=50) then if (v104<=47) then if (v104>46) then local v163=v103[2];local v164=v101[v163];for v198=v163 + 1 ,v96 do v15(v164,v101[v198]);end else v101[v103[2]]= #v101[v103[3]];end elseif (v104<=48) then v101[v103[2]]=v101[v103[3]];elseif (v104>49) then if v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end else local v259=0;local v260;local v261;local v262;local v263;while true do if (v259==0) then v260=v103[20 -(10 + 8) ];v261,v262=v94(v101[v260](v21(v101,v260 + 1 ,v103[11 -8 ])));v259=1;end if (v259==2) then for v405=v260,v96 do local v406=0;while true do if (v406==0) then v263=v263 + 1 ;v101[v405]=v261[v263];break;end end end break;end if (v259==1) then v96=(v262 + v260) -1 ;v263=0;v259=2;end end end elseif (v104<=53) then if (v104<=(493 -(416 + 26))) then v101[v103[2]]=v103[3] + v101[v103[4]] ;elseif (v104>52) then do return v101[v103[2]]();end else local v264=0;local v265;while true do if (v264==0) then v265=v103[2];v101[v265]=v101[v265](v21(v101,v265 + 1 ,v96));break;end end end elseif (v104<=54) then if (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==(175 -120)) then v101[v103[2]]={};else v101[v103[2]][v101[v103[3]]]=v101[v103[4]];end elseif (v104<=62) then if (v104<=(26 + 33)) then if (v104<=(100 -43)) then v101[v103[2]][v103[3]]=v103[4];elseif (v104>58) then local v270=0;local v271;while true do if (v270==0) then v271=v103[2];v101[v271](v21(v101,v271 + 1 ,v96));break;end end elseif v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=60) then local v171=0;local v172;local v173;local v174;local v175;while true do if (v171==2) then for v335=v172,v96 do local v336=0;while true do if (v336==0) then v175=v175 + (439 -(145 + 293)) ;v101[v335]=v173[v175];break;end end end break;end if (v171==1) then v96=(v174 + v172) -1 ;v175=0;v171=2;end if (v171==0) then v172=v103[2];v173,v174=v94(v101[v172](v101[v172 + 1 ]));v171=1;end end elseif (v104>61) then do return;end else local v272=0;local v273;local v274;while true do if (v272==1) then v101[v273 + 1 ]=v274;v101[v273]=v274[v103[4]];break;end if (v272==0) then v273=v103[2];v274=v101[v103[433 -(44 + 386) ]];v272=1;end end end elseif (v104<=65) then if (v104<=63) then local v176=v103[2];v101[v176](v101[v176 + (1487 -(998 + 488)) ]);elseif (v104>64) then v59[v103[1 + 2 ]]=v101[v103[2]];else local v277=v103[2];do return v101[v277](v21(v101,v277 + 1 + 0 ,v103[3]));end end elseif (v104<=66) then v101[v103[2]]=v103[3];elseif (v104==67) then local v278=0;local v279;while true do if (v278==0) then v279=v103[2];v101[v279](v21(v101,v279 + 1 ,v96));break;end end elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=79) then if (v104<=(845 -(201 + 571))) then if (v104<=70) then if (v104>69) then local v179=0;local v180;while true do if (0==v179) then v180=v103[2];do return v21(v101,v180,v96);end break;end end else local v181=0;local v182;local v183;while true do if (v181==1) then for v338=v182 + (1139 -(116 + 1022)) ,v96 do v15(v183,v101[v338]);end break;end if (v181==0) then v182=v103[2];v183=v101[v182];v181=1;end end end elseif (v104<=71) then local v184=v103[8 -6 ];v101[v184]=v101[v184]();elseif (v104>(43 + 29)) then local v280=v103[2];local v281,v282=v94(v101[v280](v21(v101,v280 + 1 ,v96)));v96=(v282 + v280) -1 ;local v283=0;for v324=v280,v96 do local v325=0;while true do if (0==v325) then v283=v283 + (3 -2) ;v101[v324]=v281[v283];break;end end end else local v284=0;local v285;local v286;while true do if (v284==1) then v101[v285 + 1 ]=v286;v101[v285]=v286[v103[4]];break;end if (v284==0) then v285=v103[2];v286=v101[v103[3]];v284=1;end end end elseif (v104<=76) then if (v104<=74) then local v186=0;local v187;local v188;while true do if (0==v186) then v187=v103[2];v188={};v186=1;end if (v186==1) then for v339=1, #v100 do local v340=v100[v339];for v378=0, #v340 do local v379=0;local v380;local v381;local v382;while true do if (v379==0) then v380=v340[v378];v381=v380[1];v379=1;end if (v379==1) then v382=v380[2];if ((v381==v101) and (v382>=v187)) then local v451=0;while true do if (v451==0) then v188[v382]=v381[v382];v380[1]=v188;break;end end end break;end end end end break;end end elseif (v104==75) then local v287=0;local v288;while true do if (0==v287) then v288=v103[2];do return v101[v288](v21(v101,v288 + 1 ,v103[3]));end break;end end else v101[v103[2]]=v103[3]~=0 ;end elseif (v104<=77) then v95=v103[3];elseif (v104==78) then v95=v103[3];else local v291=0;local v292;while true do if (v291==0) then v292=v103[2];v101[v292]=v101[v292](v101[v292 + 1 ]);break;end end end elseif (v104<=85) then if (v104<=82) then if (v104<=80) then for v199=v103[2],v103[3] do v101[v199]=nil;end elseif (v104>81) then local v293=v103[2];v101[v293](v21(v101,v293 + 1 ,v103[3]));else v101[v103[7 -5 ]]=v41(v92[v103[862 -(814 + 45) ]],nil,v59);end elseif (v104<=(204 -121)) then local v190=0;local v191;local v192;local v193;while true do if (v190==0) then v191=v92[v103[3]];v192=nil;v190=1;end if (1==v190) then v193={};v192=v18({},{[v7("\244\72\45\90\249\54\208","\168\171\23\68\52\157\83")]=function(v341,v342)local v343=v193[v342];return v343[1][v343[2]];end,[v7("\203\78\251\168\50\36\137\240\116\237","\231\148\17\149\205\69\77")]=function(v344,v345,v346)local v347=0;local v348;while true do if (0==v347) then v348=v193[v345];v348[1][v348[2]]=v346;break;end end end});v190=2;end if (v190==2) then for v349=1,v103[4] do local v350=0;local v351;while true do if (v350==1) then if (v351[1]==29) then v193[v349-1 ]={v101,v351[3]};else v193[v349-1 ]={v58,v351[2 + 1 ]};end v100[ #v100 + 1 ]=v193;break;end if (v350==0) then v95=v95 + 1 ;v351=v91[v95];v350=1;end end end v101[v103[2]]=v41(v191,v192,v59);break;end end elseif (v104>84) then do return;end else v101[v103[887 -(261 + 624) ]][v101[v103[3]]]=v101[v103[4]];end elseif (v104<=88) then if (v104<=(152 -66)) then v101[v103[2]]();elseif (v104>87) then v101[v103[2]]=v58[v103[3]];else do return v101[v103[2]]();end end elseif (v104<=(1169 -(1020 + 60))) then v101[v103[2]]=v103[3];elseif (v104>90) then local v299=0;local v300;local v301;local v302;local v303;while true do if (2==v299) then for v409=v300,v96 do local v410=0;while true do if (v410==0) then v303=v303 + 1 ;v101[v409]=v301[v303];break;end end end break;end if (1==v299) then v96=(v302 + v300) -1 ;v303=0;v299=2;end if (v299==0) then v300=v103[2];v301,v302=v94(v101[v300](v21(v101,v300 + 1 ,v103[3])));v299=1;end end else v101[v103[2]]=v101[v103[3]][v103[4]];end v95=v95 + 1 ;end end;end if (v60==0) then v61=v57[1271 -(226 + 1044) ];v62=v57[2];v60=1;end end end return v41(v40(),{},v28)(...);end if (2==v29) then function v34()local v64,v65=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v65 * 256) + v64 ;end v35=nil;function v35()local v66,v67,v68,v69=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v69 * (43216383 -26439167)) + (v68 * (66155 -(555 + 64))) + (v67 * 256) + v66 ;end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v70=0;local v71;local v72;local v73;local v74;local v75;local v76;while true do if (v70==2) then for v105=1,v35() do local v106=0;local v107;while true do if (v106==0) then v107=v33();if (v32(v107,1,1)==0) then local v122=v32(v107,2,3);local v123=v32(v107,4,6);local v124={v34(),v34(),nil,nil};if (v122==0) then v124[3]=v34();v124[4]=v34();elseif (v122==1) then v124[3]=v35();elseif (v122==2) then v124[3]=v35() -(2^16) ;elseif (v122==3) then v124[3]=v35() -(2^16) ;v124[4]=v34();end if (v32(v123,1,1)==1) then v124[2 -0 ]=v76[v124[2]];end if (v32(v123,2,2)==1) then v124[3]=v76[v124[3]];end if (v32(v123,3,3)==1) then v124[4]=v76[v124[1069 -(68 + 997) ]];end v71[v105]=v124;end break;end end end for v108=1,v35() do v72[v108-1 ]=v40();end return v74;end if (1==v70) then v75=v35();v76={};for v110=1638 -(1523 + 114) ,v75 do local v111=v33();local v112;if (v111==1) then v112=v33()~=0 ;elseif (v111==2) then v112=v36();elseif (v111==3) then v112=v37();end v76[v110]=v112;end v74[3 + 0 ]=v33();v70=2;end if (v70==0) then v71={};v72={};v73={};v74={v71,v72,nil,v73};v70=1;end end end v29=5;end end end vv17(),...);
